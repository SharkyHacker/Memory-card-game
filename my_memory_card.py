#—Å–æ–∑–¥–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import *
from random import shuffle, randint
#–°–∫—Ä—ã–≤–∞–µ–º –≥—Ä—É–ø–ø—É –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä—É–ø–ø—É —Ä–µ–∑—É–ª—Ç–∞—Ç–æ–≤
class Question():
    def __init__(self, question_text, fine_answr, bad1, bad2, bad3):
        self.question_text=question_text
        self.fine_answr=fine_answr
        self.bad1=bad1
        self.bad2=bad2
        self.bad3=bad3
def show_Question():
    result_box.hide()
    answer_group.show()
    button.setText('–û—Ç–≤–µ—á–∞–π!')

def asK(q:Question):
    shuffle(answers)
    answers[0].setText(q.fine_answr)
    answers[1].setText(q.bad1)
    answers[2].setText(q.bad2)
    answers[3].setText(q.bad3)
    question.setText(q.question_text)
    right_answer.setText(q.fine_answr)
    show_Question()
def show_result():
    answer_group.hide()
    result_box.show()
    button.setText("–í–ø–µ—Ä—ë–¥ –∫ –¥—Ä—É–≥–æ–º—É –≤–æ–ø—Ä–æ—Å—É")

def start_programm():
    if button.text() == ('–û—Ç–≤–µ—á–∞–π!'):
        show_result()
    else:
        show_Question()
def check_answr():
    if answers[0].isChecked():
        result_text.setText("–ü—Ä–∞–≤–∏–ª—å–Ω–æ, –ú–æ–ª–æ–¥–µ—Ü!")
        show_result()
        main_win.score =+1
    else:
        result_text.setText('–ù–ï –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!')
        show_result()
    print('–í–æ–ø—Ä–æ—Å–æ–≤ –±—ã–ª–æ:', main_win.total)
    print('–í–æ—Ç —Ç–≤–æ–π —Å—á—ë—Ç:', main_win.score)
    print('–¢–≤–æ–π –†–µ–π—Ç–∏–Ω–≥:', main_win.score/total *100)
    print('–ó–∞ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏ –≤—ã –¥–æ–ª–∂–Ω—ã –∑–∞–ø–ª–∞—Ç–∏—Ç—å –Ω–∞–º: 83447243897249738289$')
#Subscribe for show_result he is good
def Next_question():
    main_win.total += 1
    cur_question = randint(0, len(questionlist)-1)
    q=questionlist[cur_question]
    asK(q)
def click_Alright():
    if button.text() == '–û—Ç–≤–µ—á–∞–π!':
        check_answr()
    else:
        Next_question()
app = QApplication([])
main_win = QWidget()
question = QLabel("–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–æ–ª—ë–Ω—ã–π –æ–≥—É—Ä–µ—Ü?")
button = QPushButton('–û—Ç–≤–µ—á–∞–π!')
answer_group = QGroupBox("–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤")
#–ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∏–µ(–≤–æ–ø—Ä–æ—Å, 2 –≥—Ä—É–ø–ø—ã)
vline = QVBoxLayout()

main_win.setLayout(vline)
main_win.total = 0
main_win.score = 0
total =+1
main_win.resize(400,300)
main_win.setWindowTitle('Memory Card')
answer1 = QRadioButton('135000')
answer2 = QRadioButton('–û–ª–µ–Ω—å')
answer3 = QRadioButton('–û–Ω –µ–ª –∫–∞—à—É')
answer4 = QRadioButton('vline.addWidget(button)')
answers = [answer1, answer2, answer3, answer4]
v1 = QVBoxLayout()
v1.addWidget(answer1)
v1.addWidget(answer2)
v2 = QVBoxLayout()
v2.addWidget(answer3)
v2.addWidget(answer4)
h = QHBoxLayout()
h.addLayout(v1)
h.addLayout(v2)
answer_group.setLayout(h)
result_box = QGroupBox("–†–µ–∑—É–ª—å—Ç–∞—Ç")
result_text = QLabel('–ü—Ä–∞–≤–∏–ª—å–Ω–æ - –ù–ï–ø—Ä–∞–≤–∏–ª—å–Ω–æ')
right_answer = QLabel('–í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç')
v3 = QVBoxLayout()
v3.addWidget(result_text)
v3.addWidget(right_answer)
#Hide group with answers
#answer_group.hide()
result_box.setLayout(v3)
vline.addWidget(question, alignment = Qt.AlignCenter)
vline.addWidget(answer_group)
vline.addWidget(result_box)
vline.addWidget(button)
question1=Question('–ß—Ç–æ —Ç–∞–∫–æ–µ –õ–æ—Å—å?', "–û–ª–µ–Ω—åüëå", "–û—Ö—Ä–∞–Ω–∞ –ó–¥–æ—Ä–æ–≤—å—èüëå", "–í–∏–Ω–¥–æ–≤—Åüëå", "–°–∞—Ç–∏—Ä—ãüéÉ")
question2=Question("–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–æ–ª—ë–Ω—ã–π –æ–≥—É—Ä–µ—Ü?", '135000', '–û–ª–µ–Ω—å', '–û–Ω –µ–ª –∫–∞—à—É', 'vline.addWidgetbutton')
question3=Question('–ö–∞–∫ –Ω–∞–∑—ã–≤–∞—é—Ç –∂–∏—Ç–µ–ª–µ–π –≥–æ—Ä–æ–¥–∞ –ì—É—Å—å-–•—Ä—É—Å—Ç–∞–ª—å–Ω—ã–π?', '–ì—É—Å–µ–≤—á–∞–Ω–µ', '–ì—É—Å–µ—Ç—è–Ω–µ', '–ì—É—Å—è—Ç—Ü—ã', '–ì—É—Å–æ–≤—Ü—ã')
question4=Question('–í –∫–∞–∫–æ–π –ê–£ –∞–Ω–¥–µ—Ä—Ç–µ–π–ª–∞ —Å–∞–Ω—Å –Ω–æ—Å–∏—Ç –±–æ–ª—å—à—É—é –∫–∏—Å—Ç—å –∑–∞ —Å–ø–∏–Ω–æ–π?', 'Inktale', 'Underswap', 'Errortale', 'Underfresh')
question5=Question('–ö–∞–∫ —Å –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è Yo cocino una manzana?', '–Ø –≥–æ—Ç–æ–≤–ª—é —è–±–ª–æ–∫–æ', '–Ø –ø—å—é –≤–æ–¥—É', '–¢—ã –≥–æ—Ç–æ–≤–∏—à—å —è–±–ª–æ–∫–æ', '–¢—ã –ø—å—ë—à—å –≤–æ–¥—É')
button.clicked.connect(click_Alright)

questionlist=[question1, question2, question3, question4, question5]
main_win.curquestion=-1
Next_question()
main_win.show()
app.exec_()